/*
 * Merge HRIS API
 *
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_hris_client

import (
	"encoding/json"
	"fmt"
)

// PayCurrencyEnum the model 'PayCurrencyEnum'
type PayCurrencyEnum string

// List of PayCurrencyEnum
const (
	XUA PayCurrencyEnum = "XUA"
	AFN PayCurrencyEnum = "AFN"
	DZD PayCurrencyEnum = "DZD"
	ARS PayCurrencyEnum = "ARS"
	AMD PayCurrencyEnum = "AMD"
	AWG PayCurrencyEnum = "AWG"
	AUD PayCurrencyEnum = "AUD"
	AZN PayCurrencyEnum = "AZN"
	BSD PayCurrencyEnum = "BSD"
	BHD PayCurrencyEnum = "BHD"
	THB PayCurrencyEnum = "THB"
	PAB PayCurrencyEnum = "PAB"
	BBD PayCurrencyEnum = "BBD"
	BYN PayCurrencyEnum = "BYN"
	BYR PayCurrencyEnum = "BYR"
	BZD PayCurrencyEnum = "BZD"
	BMD PayCurrencyEnum = "BMD"
	BTN PayCurrencyEnum = "BTN"
	VEF PayCurrencyEnum = "VEF"
	BOB PayCurrencyEnum = "BOB"
	XBA PayCurrencyEnum = "XBA"
	BRL PayCurrencyEnum = "BRL"
	BND PayCurrencyEnum = "BND"
	BGN PayCurrencyEnum = "BGN"
	BIF PayCurrencyEnum = "BIF"
	XOF PayCurrencyEnum = "XOF"
	XAF PayCurrencyEnum = "XAF"
	XPF PayCurrencyEnum = "XPF"
	CAD PayCurrencyEnum = "CAD"
	CVE PayCurrencyEnum = "CVE"
	KYD PayCurrencyEnum = "KYD"
	CLP PayCurrencyEnum = "CLP"
	XTS PayCurrencyEnum = "XTS"
	COP PayCurrencyEnum = "COP"
	KMF PayCurrencyEnum = "KMF"
	CDF PayCurrencyEnum = "CDF"
	BAM PayCurrencyEnum = "BAM"
	NIO PayCurrencyEnum = "NIO"
	CRC PayCurrencyEnum = "CRC"
	HRK PayCurrencyEnum = "HRK"
	CUP PayCurrencyEnum = "CUP"
	CUC PayCurrencyEnum = "CUC"
	CZK PayCurrencyEnum = "CZK"
	GMD PayCurrencyEnum = "GMD"
	DKK PayCurrencyEnum = "DKK"
	MKD PayCurrencyEnum = "MKD"
	DJF PayCurrencyEnum = "DJF"
	STD PayCurrencyEnum = "STD"
	DOP PayCurrencyEnum = "DOP"
	VND PayCurrencyEnum = "VND"
	XCD PayCurrencyEnum = "XCD"
	EGP PayCurrencyEnum = "EGP"
	SVC PayCurrencyEnum = "SVC"
	ETB PayCurrencyEnum = "ETB"
	EUR PayCurrencyEnum = "EUR"
	XBB PayCurrencyEnum = "XBB"
	XBD PayCurrencyEnum = "XBD"
	XBC PayCurrencyEnum = "XBC"
	FKP PayCurrencyEnum = "FKP"
	FJD PayCurrencyEnum = "FJD"
	HUF PayCurrencyEnum = "HUF"
	GHS PayCurrencyEnum = "GHS"
	GIP PayCurrencyEnum = "GIP"
	XAU PayCurrencyEnum = "XAU"
	XFO PayCurrencyEnum = "XFO"
	PYG PayCurrencyEnum = "PYG"
	GNF PayCurrencyEnum = "GNF"
	GYD PayCurrencyEnum = "GYD"
	HTG PayCurrencyEnum = "HTG"
	HKD PayCurrencyEnum = "HKD"
	UAH PayCurrencyEnum = "UAH"
	ISK PayCurrencyEnum = "ISK"
	INR PayCurrencyEnum = "INR"
	IRR PayCurrencyEnum = "IRR"
	IQD PayCurrencyEnum = "IQD"
	IMP PayCurrencyEnum = "IMP"
	JMD PayCurrencyEnum = "JMD"
	JOD PayCurrencyEnum = "JOD"
	KES PayCurrencyEnum = "KES"
	PGK PayCurrencyEnum = "PGK"
	LAK PayCurrencyEnum = "LAK"
	KWD PayCurrencyEnum = "KWD"
	AOA PayCurrencyEnum = "AOA"
	MMK PayCurrencyEnum = "MMK"
	GEL PayCurrencyEnum = "GEL"
	LVL PayCurrencyEnum = "LVL"
	LBP PayCurrencyEnum = "LBP"
	ALL PayCurrencyEnum = "ALL"
	HNL PayCurrencyEnum = "HNL"
	SLL PayCurrencyEnum = "SLL"
	LSL PayCurrencyEnum = "LSL"
	LRD PayCurrencyEnum = "LRD"
	LYD PayCurrencyEnum = "LYD"
	SZL PayCurrencyEnum = "SZL"
	LTL PayCurrencyEnum = "LTL"
	MGA PayCurrencyEnum = "MGA"
	MWK PayCurrencyEnum = "MWK"
	MYR PayCurrencyEnum = "MYR"
	TMM PayCurrencyEnum = "TMM"
	MUR PayCurrencyEnum = "MUR"
	MZN PayCurrencyEnum = "MZN"
	MXV PayCurrencyEnum = "MXV"
	MXN PayCurrencyEnum = "MXN"
	MDL PayCurrencyEnum = "MDL"
	MAD PayCurrencyEnum = "MAD"
	BOV PayCurrencyEnum = "BOV"
	NGN PayCurrencyEnum = "NGN"
	ERN PayCurrencyEnum = "ERN"
	NAD PayCurrencyEnum = "NAD"
	NPR PayCurrencyEnum = "NPR"
	ANG PayCurrencyEnum = "ANG"
	ILS PayCurrencyEnum = "ILS"
	RON PayCurrencyEnum = "RON"
	TWD PayCurrencyEnum = "TWD"
	NZD PayCurrencyEnum = "NZD"
	KPW PayCurrencyEnum = "KPW"
	NOK PayCurrencyEnum = "NOK"
	PEN PayCurrencyEnum = "PEN"
	MRO PayCurrencyEnum = "MRO"
	TOP PayCurrencyEnum = "TOP"
	PKR PayCurrencyEnum = "PKR"
	XPD PayCurrencyEnum = "XPD"
	MOP PayCurrencyEnum = "MOP"
	PHP PayCurrencyEnum = "PHP"
	XPT PayCurrencyEnum = "XPT"
	GBP PayCurrencyEnum = "GBP"
	BWP PayCurrencyEnum = "BWP"
	QAR PayCurrencyEnum = "QAR"
	GTQ PayCurrencyEnum = "GTQ"
	ZAR PayCurrencyEnum = "ZAR"
	OMR PayCurrencyEnum = "OMR"
	KHR PayCurrencyEnum = "KHR"
	MVR PayCurrencyEnum = "MVR"
	IDR PayCurrencyEnum = "IDR"
	RUB PayCurrencyEnum = "RUB"
	RWF PayCurrencyEnum = "RWF"
	XDR PayCurrencyEnum = "XDR"
	SHP PayCurrencyEnum = "SHP"
	SAR PayCurrencyEnum = "SAR"
	RSD PayCurrencyEnum = "RSD"
	SCR PayCurrencyEnum = "SCR"
	XAG PayCurrencyEnum = "XAG"
	SGD PayCurrencyEnum = "SGD"
	SBD PayCurrencyEnum = "SBD"
	KGS PayCurrencyEnum = "KGS"
	SOS PayCurrencyEnum = "SOS"
	TJS PayCurrencyEnum = "TJS"
	SSP PayCurrencyEnum = "SSP"
	LKR PayCurrencyEnum = "LKR"
	XSU PayCurrencyEnum = "XSU"
	SDG PayCurrencyEnum = "SDG"
	SRD PayCurrencyEnum = "SRD"
	SEK PayCurrencyEnum = "SEK"
	CHF PayCurrencyEnum = "CHF"
	SYP PayCurrencyEnum = "SYP"
	BDT PayCurrencyEnum = "BDT"
	WST PayCurrencyEnum = "WST"
	TZS PayCurrencyEnum = "TZS"
	KZT PayCurrencyEnum = "KZT"
	XXX PayCurrencyEnum = "XXX"
	TTD PayCurrencyEnum = "TTD"
	MNT PayCurrencyEnum = "MNT"
	TND PayCurrencyEnum = "TND"
	TRY PayCurrencyEnum = "TRY"
	TMT PayCurrencyEnum = "TMT"
	TVD PayCurrencyEnum = "TVD"
	AED PayCurrencyEnum = "AED"
	XFU PayCurrencyEnum = "XFU"
	USD PayCurrencyEnum = "USD"
	USN PayCurrencyEnum = "USN"
	UGX PayCurrencyEnum = "UGX"
	CLF PayCurrencyEnum = "CLF"
	COU PayCurrencyEnum = "COU"
	UYI PayCurrencyEnum = "UYI"
	UYU PayCurrencyEnum = "UYU"
	UZS PayCurrencyEnum = "UZS"
	VUV PayCurrencyEnum = "VUV"
	CHE PayCurrencyEnum = "CHE"
	CHW PayCurrencyEnum = "CHW"
	KRW PayCurrencyEnum = "KRW"
	YER PayCurrencyEnum = "YER"
	JPY PayCurrencyEnum = "JPY"
	CNY PayCurrencyEnum = "CNY"
	ZMK PayCurrencyEnum = "ZMK"
	ZMW PayCurrencyEnum = "ZMW"
	ZWD PayCurrencyEnum = "ZWD"
	ZWN PayCurrencyEnum = "ZWN"
	ZWL PayCurrencyEnum = "ZWL"
	PLN PayCurrencyEnum = "PLN"
)

func (v *PayCurrencyEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PayCurrencyEnum(value)
	for _, existing := range []PayCurrencyEnum{ "XUA", "AFN", "DZD", "ARS", "AMD", "AWG", "AUD", "AZN", "BSD", "BHD", "THB", "PAB", "BBD", "BYN", "BYR", "BZD", "BMD", "BTN", "VEF", "BOB", "XBA", "BRL", "BND", "BGN", "BIF", "XOF", "XAF", "XPF", "CAD", "CVE", "KYD", "CLP", "XTS", "COP", "KMF", "CDF", "BAM", "NIO", "CRC", "HRK", "CUP", "CUC", "CZK", "GMD", "DKK", "MKD", "DJF", "STD", "DOP", "VND", "XCD", "EGP", "SVC", "ETB", "EUR", "XBB", "XBD", "XBC", "FKP", "FJD", "HUF", "GHS", "GIP", "XAU", "XFO", "PYG", "GNF", "GYD", "HTG", "HKD", "UAH", "ISK", "INR", "IRR", "IQD", "IMP", "JMD", "JOD", "KES", "PGK", "LAK", "KWD", "AOA", "MMK", "GEL", "LVL", "LBP", "ALL", "HNL", "SLL", "LSL", "LRD", "LYD", "SZL", "LTL", "MGA", "MWK", "MYR", "TMM", "MUR", "MZN", "MXV", "MXN", "MDL", "MAD", "BOV", "NGN", "ERN", "NAD", "NPR", "ANG", "ILS", "RON", "TWD", "NZD", "KPW", "NOK", "PEN", "MRO", "TOP", "PKR", "XPD", "MOP", "PHP", "XPT", "GBP", "BWP", "QAR", "GTQ", "ZAR", "OMR", "KHR", "MVR", "IDR", "RUB", "RWF", "XDR", "SHP", "SAR", "RSD", "SCR", "XAG", "SGD", "SBD", "KGS", "SOS", "TJS", "SSP", "LKR", "XSU", "SDG", "SRD", "SEK", "CHF", "SYP", "BDT", "WST", "TZS", "KZT", "XXX", "TTD", "MNT", "TND", "TRY", "TMT", "TVD", "AED", "XFU", "USD", "USN", "UGX", "CLF", "COU", "UYI", "UYU", "UZS", "VUV", "CHE", "CHW", "KRW", "YER", "JPY", "CNY", "ZMK", "ZMW", "ZWD", "ZWN", "ZWL", "PLN",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PayCurrencyEnum", value)
}

// Ptr returns reference to PayCurrencyEnum value
func (v PayCurrencyEnum) Ptr() *PayCurrencyEnum {
	return &v
}

type NullablePayCurrencyEnum struct {
	value *PayCurrencyEnum
	isSet bool
}

func (v NullablePayCurrencyEnum) Get() *PayCurrencyEnum {
	return v.value
}

func (v *NullablePayCurrencyEnum) Set(val *PayCurrencyEnum) {
	v.value = val
	v.isSet = true
}

func (v NullablePayCurrencyEnum) IsSet() bool {
	return v.isSet
}

func (v *NullablePayCurrencyEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayCurrencyEnum(val *PayCurrencyEnum) *NullablePayCurrencyEnum {
	return &NullablePayCurrencyEnum{value: val, isSet: true}
}

func (v NullablePayCurrencyEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayCurrencyEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

