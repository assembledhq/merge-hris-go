/*
 * Merge HRIS API
 *
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_hris_client

import (
	"encoding/json"
	"fmt"
)

// RunStateEnum the model 'RunStateEnum'
type RunStateEnum string

// List of RunStateEnum
const (
	RUNSTATEENUM_PAID RunStateEnum = "PAID"
	RUNSTATEENUM_DRAFT RunStateEnum = "DRAFT"
	RUNSTATEENUM_APPROVED RunStateEnum = "APPROVED"
	RUNSTATEENUM_FAILED RunStateEnum = "FAILED"
	RUNSTATEENUM_CLOSED RunStateEnum = "CLOSED"
)

func (v *RunStateEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RunStateEnum(value)
	for _, existing := range []RunStateEnum{ "PAID", "DRAFT", "APPROVED", "FAILED", "CLOSED",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RunStateEnum", value)
}

// Ptr returns reference to RunStateEnum value
func (v RunStateEnum) Ptr() *RunStateEnum {
	return &v
}

type NullableRunStateEnum struct {
	value *RunStateEnum
	isSet bool
}

func (v NullableRunStateEnum) Get() *RunStateEnum {
	return v.value
}

func (v *NullableRunStateEnum) Set(val *RunStateEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableRunStateEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableRunStateEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunStateEnum(val *RunStateEnum) *NullableRunStateEnum {
	return &NullableRunStateEnum{value: val, isSet: true}
}

func (v NullableRunStateEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunStateEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

