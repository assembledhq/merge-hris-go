/*
 * Merge HRIS API
 *
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_hris_client

import (
	"encoding/json"
	"fmt"
)

// CountryEnum the model 'CountryEnum'
type CountryEnum string

// List of CountryEnum
const (
	AF CountryEnum = "AF"
	AX CountryEnum = "AX"
	AL CountryEnum = "AL"
	DZ CountryEnum = "DZ"
	AS CountryEnum = "AS"
	AD CountryEnum = "AD"
	AO CountryEnum = "AO"
	AI CountryEnum = "AI"
	AQ CountryEnum = "AQ"
	AG CountryEnum = "AG"
	AR CountryEnum = "AR"
	AM CountryEnum = "AM"
	AW CountryEnum = "AW"
	AU CountryEnum = "AU"
	AT CountryEnum = "AT"
	AZ CountryEnum = "AZ"
	BS CountryEnum = "BS"
	BH CountryEnum = "BH"
	BD CountryEnum = "BD"
	BB CountryEnum = "BB"
	BY CountryEnum = "BY"
	BE CountryEnum = "BE"
	BZ CountryEnum = "BZ"
	BJ CountryEnum = "BJ"
	BM CountryEnum = "BM"
	BT CountryEnum = "BT"
	BO CountryEnum = "BO"
	BQ CountryEnum = "BQ"
	BA CountryEnum = "BA"
	BW CountryEnum = "BW"
	BV CountryEnum = "BV"
	BR CountryEnum = "BR"
	IO CountryEnum = "IO"
	BN CountryEnum = "BN"
	BG CountryEnum = "BG"
	BF CountryEnum = "BF"
	BI CountryEnum = "BI"
	CV CountryEnum = "CV"
	KH CountryEnum = "KH"
	CM CountryEnum = "CM"
	CA CountryEnum = "CA"
	KY CountryEnum = "KY"
	CF CountryEnum = "CF"
	TD CountryEnum = "TD"
	CL CountryEnum = "CL"
	CN CountryEnum = "CN"
	CX CountryEnum = "CX"
	CC CountryEnum = "CC"
	CO CountryEnum = "CO"
	KM CountryEnum = "KM"
	CG CountryEnum = "CG"
	CD CountryEnum = "CD"
	CK CountryEnum = "CK"
	CR CountryEnum = "CR"
	CI CountryEnum = "CI"
	HR CountryEnum = "HR"
	CU CountryEnum = "CU"
	CW CountryEnum = "CW"
	CY CountryEnum = "CY"
	CZ CountryEnum = "CZ"
	DK CountryEnum = "DK"
	DJ CountryEnum = "DJ"
	DM CountryEnum = "DM"
	DO CountryEnum = "DO"
	EC CountryEnum = "EC"
	EG CountryEnum = "EG"
	SV CountryEnum = "SV"
	GQ CountryEnum = "GQ"
	ER CountryEnum = "ER"
	EE CountryEnum = "EE"
	SZ CountryEnum = "SZ"
	ET CountryEnum = "ET"
	FK CountryEnum = "FK"
	FO CountryEnum = "FO"
	FJ CountryEnum = "FJ"
	FI CountryEnum = "FI"
	FR CountryEnum = "FR"
	GF CountryEnum = "GF"
	PF CountryEnum = "PF"
	TF CountryEnum = "TF"
	GA CountryEnum = "GA"
	GM CountryEnum = "GM"
	GE CountryEnum = "GE"
	DE CountryEnum = "DE"
	GH CountryEnum = "GH"
	GI CountryEnum = "GI"
	GR CountryEnum = "GR"
	GL CountryEnum = "GL"
	GD CountryEnum = "GD"
	GP CountryEnum = "GP"
	GU CountryEnum = "GU"
	GT CountryEnum = "GT"
	GG CountryEnum = "GG"
	GN CountryEnum = "GN"
	GW CountryEnum = "GW"
	GY CountryEnum = "GY"
	HT CountryEnum = "HT"
	HM CountryEnum = "HM"
	VA CountryEnum = "VA"
	HN CountryEnum = "HN"
	HK CountryEnum = "HK"
	HU CountryEnum = "HU"
	IS CountryEnum = "IS"
	IN CountryEnum = "IN"
	ID CountryEnum = "ID"
	IR CountryEnum = "IR"
	IQ CountryEnum = "IQ"
	IE CountryEnum = "IE"
	IM CountryEnum = "IM"
	IL CountryEnum = "IL"
	IT CountryEnum = "IT"
	JM CountryEnum = "JM"
	JP CountryEnum = "JP"
	JE CountryEnum = "JE"
	JO CountryEnum = "JO"
	KZ CountryEnum = "KZ"
	KE CountryEnum = "KE"
	KI CountryEnum = "KI"
	KW CountryEnum = "KW"
	KG CountryEnum = "KG"
	LA CountryEnum = "LA"
	LV CountryEnum = "LV"
	LB CountryEnum = "LB"
	LS CountryEnum = "LS"
	LR CountryEnum = "LR"
	LY CountryEnum = "LY"
	LI CountryEnum = "LI"
	LT CountryEnum = "LT"
	LU CountryEnum = "LU"
	MO CountryEnum = "MO"
	MG CountryEnum = "MG"
	MW CountryEnum = "MW"
	MY CountryEnum = "MY"
	MV CountryEnum = "MV"
	ML CountryEnum = "ML"
	MT CountryEnum = "MT"
	MH CountryEnum = "MH"
	MQ CountryEnum = "MQ"
	MR CountryEnum = "MR"
	MU CountryEnum = "MU"
	YT CountryEnum = "YT"
	MX CountryEnum = "MX"
	FM CountryEnum = "FM"
	MD CountryEnum = "MD"
	MC CountryEnum = "MC"
	MN CountryEnum = "MN"
	ME CountryEnum = "ME"
	MS CountryEnum = "MS"
	MA CountryEnum = "MA"
	MZ CountryEnum = "MZ"
	MM CountryEnum = "MM"
	NA CountryEnum = "NA"
	NR CountryEnum = "NR"
	NP CountryEnum = "NP"
	NL CountryEnum = "NL"
	NC CountryEnum = "NC"
	NZ CountryEnum = "NZ"
	NI CountryEnum = "NI"
	NE CountryEnum = "NE"
	NG CountryEnum = "NG"
	NU CountryEnum = "NU"
	NF CountryEnum = "NF"
	KP CountryEnum = "KP"
	MK CountryEnum = "MK"
	MP CountryEnum = "MP"
	NO CountryEnum = "NO"
	OM CountryEnum = "OM"
	PK CountryEnum = "PK"
	PW CountryEnum = "PW"
	PS CountryEnum = "PS"
	PA CountryEnum = "PA"
	PG CountryEnum = "PG"
	PY CountryEnum = "PY"
	PE CountryEnum = "PE"
	PH CountryEnum = "PH"
	PN CountryEnum = "PN"
	PL CountryEnum = "PL"
	PT CountryEnum = "PT"
	PR CountryEnum = "PR"
	QA CountryEnum = "QA"
	RE CountryEnum = "RE"
	RO CountryEnum = "RO"
	RU CountryEnum = "RU"
	RW CountryEnum = "RW"
	BL CountryEnum = "BL"
	SH CountryEnum = "SH"
	KN CountryEnum = "KN"
	LC CountryEnum = "LC"
	MF CountryEnum = "MF"
	PM CountryEnum = "PM"
	VC CountryEnum = "VC"
	WS CountryEnum = "WS"
	SM CountryEnum = "SM"
	ST CountryEnum = "ST"
	SA CountryEnum = "SA"
	SN CountryEnum = "SN"
	RS CountryEnum = "RS"
	SC CountryEnum = "SC"
	SL CountryEnum = "SL"
	SG CountryEnum = "SG"
	SX CountryEnum = "SX"
	SK CountryEnum = "SK"
	SI CountryEnum = "SI"
	SB CountryEnum = "SB"
	SO CountryEnum = "SO"
	ZA CountryEnum = "ZA"
	GS CountryEnum = "GS"
	KR CountryEnum = "KR"
	SS CountryEnum = "SS"
	ES CountryEnum = "ES"
	LK CountryEnum = "LK"
	SD CountryEnum = "SD"
	SR CountryEnum = "SR"
	SJ CountryEnum = "SJ"
	SE CountryEnum = "SE"
	CH CountryEnum = "CH"
	SY CountryEnum = "SY"
	TW CountryEnum = "TW"
	TJ CountryEnum = "TJ"
	TZ CountryEnum = "TZ"
	TH CountryEnum = "TH"
	TL CountryEnum = "TL"
	TG CountryEnum = "TG"
	TK CountryEnum = "TK"
	TO CountryEnum = "TO"
	TT CountryEnum = "TT"
	TN CountryEnum = "TN"
	TR CountryEnum = "TR"
	TM CountryEnum = "TM"
	TC CountryEnum = "TC"
	TV CountryEnum = "TV"
	UG CountryEnum = "UG"
	UA CountryEnum = "UA"
	AE CountryEnum = "AE"
	GB CountryEnum = "GB"
	UM CountryEnum = "UM"
	US CountryEnum = "US"
	UY CountryEnum = "UY"
	UZ CountryEnum = "UZ"
	VU CountryEnum = "VU"
	VE CountryEnum = "VE"
	VN CountryEnum = "VN"
	VG CountryEnum = "VG"
	VI CountryEnum = "VI"
	WF CountryEnum = "WF"
	EH CountryEnum = "EH"
	YE CountryEnum = "YE"
	ZM CountryEnum = "ZM"
	ZW CountryEnum = "ZW"
)

func (v *CountryEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CountryEnum(value)
	for _, existing := range []CountryEnum{ "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "CV", "KH", "CM", "CA", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "SZ", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "KP", "MK", "MP", "NO", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "KR", "SS", "ES", "LK", "SD", "SR", "SJ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "US", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CountryEnum", value)
}

// Ptr returns reference to CountryEnum value
func (v CountryEnum) Ptr() *CountryEnum {
	return &v
}

type NullableCountryEnum struct {
	value *CountryEnum
	isSet bool
}

func (v NullableCountryEnum) Get() *CountryEnum {
	return v.value
}

func (v *NullableCountryEnum) Set(val *CountryEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableCountryEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableCountryEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCountryEnum(val *CountryEnum) *NullableCountryEnum {
	return &NullableCountryEnum{value: val, isSet: true}
}

func (v NullableCountryEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCountryEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

